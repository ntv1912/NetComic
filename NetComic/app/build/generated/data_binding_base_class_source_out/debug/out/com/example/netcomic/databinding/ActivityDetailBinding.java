// Generated by view binder compiler. Do not edit!
package com.example.netcomic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.netcomic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final TextView comicAuthor;

  @NonNull
  public final TextView comicGenre;

  @NonNull
  public final ImageView comicImage;

  @NonNull
  public final TextView comicTitle;

  @NonNull
  public final Button followButton;

  @NonNull
  public final Button readFromStartButton;

  @NonNull
  public final RecyclerView recyclerViewChapters;

  @NonNull
  public final Toolbar toolbar;

  private ActivityDetailBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton backButton,
      @NonNull TextView comicAuthor, @NonNull TextView comicGenre, @NonNull ImageView comicImage,
      @NonNull TextView comicTitle, @NonNull Button followButton,
      @NonNull Button readFromStartButton, @NonNull RecyclerView recyclerViewChapters,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.comicAuthor = comicAuthor;
    this.comicGenre = comicGenre;
    this.comicImage = comicImage;
    this.comicTitle = comicTitle;
    this.followButton = followButton;
    this.readFromStartButton = readFromStartButton;
    this.recyclerViewChapters = recyclerViewChapters;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.comic_author;
      TextView comicAuthor = ViewBindings.findChildViewById(rootView, id);
      if (comicAuthor == null) {
        break missingId;
      }

      id = R.id.comic_genre;
      TextView comicGenre = ViewBindings.findChildViewById(rootView, id);
      if (comicGenre == null) {
        break missingId;
      }

      id = R.id.comic_image;
      ImageView comicImage = ViewBindings.findChildViewById(rootView, id);
      if (comicImage == null) {
        break missingId;
      }

      id = R.id.comic_title;
      TextView comicTitle = ViewBindings.findChildViewById(rootView, id);
      if (comicTitle == null) {
        break missingId;
      }

      id = R.id.follow_button;
      Button followButton = ViewBindings.findChildViewById(rootView, id);
      if (followButton == null) {
        break missingId;
      }

      id = R.id.read_from_start_button;
      Button readFromStartButton = ViewBindings.findChildViewById(rootView, id);
      if (readFromStartButton == null) {
        break missingId;
      }

      id = R.id.recycler_view_chapters;
      RecyclerView recyclerViewChapters = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewChapters == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityDetailBinding((ConstraintLayout) rootView, backButton, comicAuthor,
          comicGenre, comicImage, comicTitle, followButton, readFromStartButton,
          recyclerViewChapters, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
